version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: job_board_db
    environment:
      POSTGRES_DB: job_board
      POSTGRES_USER: job_user
      POSTGRES_PASSWORD: job_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - job_board_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U job_user -d job_board"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: job_board_api
    environment:
      - DATABASE_URL=postgresql://job_user:job_password@postgres:5432/job_board
      - SECRET_KEY=your-secret-key-here-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - UPLOAD_DIR=uploads
    volumes:
      - uploads_data:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - job_board_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (for caching and sessions - optional)
  redis:
    image: redis:7-alpine
    container_name: job_board_redis
    ports:
      - "6379:6379"
    networks:
      - job_board_network
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  uploads_data:
    driver: local
  redis_data:
    driver: local

networks:
  job_board_network:
    driver: bridge 